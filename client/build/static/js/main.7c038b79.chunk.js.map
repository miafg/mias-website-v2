{"version":3,"sources":["components/MainPage.js","components/AboutMe.js","components/Experience.js","components/Photos.js","App.js","serviceWorker.js","index.js"],"names":["MainPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callMainPhotosAPI","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","body","wrap","_context","prev","next","console","log","fetch","sent","json","status","Error","message","abrupt","stop","state","loading","links","href","photoUrl","title","_this2","then","res","newState","slice","forEach","item","index","secure_url","setState","catch","err","react_default","createElement","className","Image","map","link","key","Placeholder","square","style","backgroundImage","Component","AboutMe","Experience","Card","fluid","Content","Header","as","Meta","Description","centered","color","extra","Icon","name","Grid","columns","divided","Column","Row","Flag","src","Photos","callPhotoGalleryAPI","nextCursor","concat","undefined","photos","newPhotos","parseData","element","width","height","react_photo_gallery_esm","App","handleItemClick","e","_ref","activeItem","Menu","borderless","attached","size","Item","header","position","active","onClick","target","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7c038b79.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Image, Placeholder } from 'semantic-ui-react';\n\nimport './Style/MainPage.css';\n\nclass MainPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      links: [\n        {\n          href: '/aboutme',\n          photoUrl: '',\n          title: 'about me'\n        },\n        {\n          href: '/experience',\n          photoUrl: '',\n          title: 'experience'\n        },\n        {\n          href: '/photos',\n          photoUrl: '',\n          title: 'photos'\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    // call api to get main page photos\n    this.callMainPhotosAPI()\n      .then(res => {\n        const newState = {\n          loading: false\n        };\n        const links = this.state.links.slice();\n        links.forEach((item, index) => {\n          item.photoUrl = res['resources'][index].secure_url;\n        })\n        // show the photos\n        newState.links = links;\n        console.log(res['resources'])\n        this.setState(newState);\n      })\n      .catch(err => console.log(err));\n  }\n\n  callMainPhotosAPI = async () => {\n    const url = \"/api/homepageimages\";\n    console.log(url);\n    const response = await fetch(url);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"Main-page\">\n        <Image className=\"Front-page-image\" />\n        <div className=\"App-main-content\">\n          <div className=\"Overlap-section\">\n            { !this.state.loading ?\n                this.state.links.map((link, index) => {\n                  return (\n                    <a key={index} href={link.href}>\n                      <Image className=\"Overlap-image\" style={{backgroundImage: 'url(' + link.photoUrl + ')'}}>\n                        <div className=\"Overlap-label\">{link.title}</div>\n                      </Image>\n                    </a>\n                  );\n                })\n                :\n                this.state.links.map(function(link, index) {\n                  return (\n                    <a key={index} href={link}>\n                      <Placeholder>\n                        <Placeholder.Image square />\n                      </Placeholder>\n                    </a>\n                  );\n                })\n              }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\n\nimport './Style/AboutMe.css';\n\nconst AboutMe = () => (\n  <Image className=\"About-me\">\n    <div className=\"About-me-description\">\n      I am software developer who codes by day and bakes by night.\n      I am passionate about being a woman in tech and helping others get involved!\n      In my free time, I like to travel, explore new places and cusines.\n    </div>\n  </Image>\n);\n\nexport default AboutMe;","import React from 'react';\nimport { Card, Flag, Grid, Icon, Image } from 'semantic-ui-react';\n\nimport './Style/Experience.css';\n\nconst Experience = () => (\n  <div className=\"Experience\">\n    <Card fluid className=\"ui card Experience-mega-card\">\n      <Card.Content>\n        <Card.Header className=\"Experience-mega-card-header\" as='h2'>Current Role</Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Card.Meta as=\"h2\" className=\"Experience-subheader\">\n          CORE Technology Associate\n        </Card.Meta>\n        <Card.Description className=\"Experience-subheader-desc\">A two year rotational program comprised of three rotations across Comcast NBCUniversal</Card.Description>\n      </Card.Content>\n      <Card.Content className=\"Experience-rotations\">\n        <Card centered color='olive' className=\"Experience-child-card Experience-child-card-horizontal\">\n          <Card.Content className=\"Experience-child-card-headers\">\n            <Card.Header as=\"h1\">Comcast VIPER</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            I contribute to a microservice that packages VOD content using GoLang, Kubernetes and Docker.\n            I initiated cross-team colloboration to implement 4k linear end-to-end.\n            I participated in Labweek to create an asset management library,\n            with a React front-end and GoLang backend.\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name='calendar outline' />\n            Jan 2019 - Present\n          </Card.Content>\n        </Card>\n        <Card centered color='olive' className=\"Experience-child-card Experience-child-card-horizontal\">\n          <Card.Content className=\"Experience-child-card-headers\">\n            <Card.Header as=\"h1\">NBC Digital</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            I integrated GraphQL backend with the front-end web client to improve load times by 30%.\n            I added new data structures and implemented business logic on the backend in GraphQL\n            and Algolia. I also implemented features and fixed bugs on React front-end site.\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name='calendar outline' />\n            July 2018 - Jan 2019\n          </Card.Content>\n        </Card>\n        <Card centered color='olive' className=\"Experience-child-card Experience-child-card-horizontal\">\n          <Card.Content className=\"Experience-child-card-headers\">\n            <Card.Header as=\"h1\">Xfinity Stream Web</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            I collaborated closely with UX, QA and other developers on the team to implement new features,\n            for Comcast Xfinity stream web app using Polymer framework. I unified error logging across the app\n            to standardize error codes across apps in order to identify and escalate issues effectively.\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name='calendar outline' />\n            July 2017 - July 2018\n          </Card.Content>\n        </Card>\n      </Card.Content>\n    </Card>\n    <div className=\"Experience-group\">\n      <Card className=\"Experience-leadership\">\n        <Card.Content>\n          <Card.Header>Leadership Roles</Card.Header>\n        </Card.Content>\n        <Card.Content className=\"Experience-child-card-container-cols\">\n          <Card className=\"Experience-child-card Experience-child-card-vertical\" centered color='olive'>\n            <Card.Content className=\"Experience-child-card-headers\">\n              <Card.Header as=\"h1\">CORE Tech CommSquad</Card.Header>\n              <Card.Meta>Co-Lead</Card.Meta>\n            </Card.Content>\n            <Card.Content>As the communications committee co-lead, I planned and delegate tasks in order to\n              write/edit articles, and publish a quarterly CORE Tech newsletter, <i>The CATALYST</i>.\n              I created and maintain website to publish <i>The CATALYST</i>.\n              I also facilitate our collaboration with CORE Finance to publish monthly editions of PPN Pulse.\n              </Card.Content>\n            <Card.Content extra>\n              <Icon name='calendar outline' />\n              Aug 2018 - Present\n            </Card.Content>\n          </Card>\n          <Card className=\"Experience-child-card Experience-child-card-vertical\" centered color='olive'>\n            <Card.Content className=\"Experience-child-card-headers\">\n              <Card.Header as=\"h1\">CORE Tech Alumni Committee</Card.Header>\n            </Card.Content>\n            <Card.Content>I co-lead the alumni committee's buddy program, where we match\n              current associates with incomming associates to provide them an informal mentorship.\n              I organize local meetups with CORE Tech associates to foster a sense of community.\n              I identified an opportunity for collaboration across all committess to create a unified CORE Tech website.</Card.Content>\n            <Card.Content extra>\n              <Icon name='calendar outline' />\n              March 2018 - Present\n            </Card.Content>\n          </Card>\n          <Card className=\"Experience-child-card Experience-child-card-vertical\" centered color='olive'>\n            <Card.Content className=\"Experience-child-card-headers\">\n              <Card.Header as=\"h1\">Teaching Assistant</Card.Header>\n            </Card.Content>\n            <Card.Content>I helped students learn the fundamentals of computer science during weekly recitations and office hours.\n              I graded weekly assignments, wrote exam problems, and graded and proctored exams.</Card.Content>\n            <Card.Content extra>\n              <Icon name='calendar outline' />\n              Aug 2015 - Jun 2017\n            </Card.Content>\n          </Card>\n        </Card.Content>\n      </Card>\n      <div className=\"Experience-skills-edu\">\n        <Card color='olive'>\n          <Card.Content className=\"Experience-skills-edu-header\">\n            <Card.Header>Skills</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Grid columns={3} divided>\n              <Grid.Column>\n                <Grid.Row className=\"Experience-column-title\">Proficient</Grid.Row>\n                <Grid.Row>\n                  Polymer, React, Java, Javascript, CSS, HTML, Jira, Linux, Git/Github\n                </Grid.Row>\n              </Grid.Column>\n              <Grid.Column>\n                <Grid.Row className=\"Experience-column-title\">Intermediate</Grid.Row>\n                <Grid.Row>\n                  Ocaml, AngularJS, Python, SQL, Telemetry, Splunk, C++\n                </Grid.Row>\n              </Grid.Column>\n              <Grid.Column>\n                <Grid.Row className=\"Experience-column-title\">Learning</Grid.Row>\n                <Grid.Row>\n                  GoLang, Docker, Kubernetes, Concourse, Vue.js, Algolia, GraphQL\n                </Grid.Row>\n              </Grid.Column>\n            </Grid>\n            <br />\n            Languages:&nbsp;&nbsp;&nbsp;\n            <Flag name='france' />\n            <Flag name='es' />\n          </Card.Content>\n        </Card>\n        <Card color='olive'>\n          <Card.Content className=\"Experience-skills-edu-header\">\n            <Card.Header>Education</Card.Header>\n            <Card.Meta>B.A. Computer Science &amp; Cognitive Science</Card.Meta>\n          </Card.Content>\n          <Image src=\"https://static1.squarespace.com/static/54ab7929e4b0170492f02976/t/54c2e1ece4b0badc93a25eb1/1422057965033/Fisher+2.jpg?format=2500w\" />\n          <Card.Content>\n            University of Pennsylvania\n          </Card.Content>\n          <Card.Content extra>\n            <Icon name='calendar outline' />\n            2013-2017\n          </Card.Content>\n        </Card>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Experience;","import React, { Component } from 'react';\nimport Gallery from 'react-photo-gallery';\n\nimport './Style/Photos.css';\n// import { beach } from './images/beach.jpg';\n\nclass Photos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nextCursor: undefined,\n      photos: []\n    };\n  }\n\n  callPhotoGalleryAPI = async () => {\n    const url = \"/api/photogallery\" + (this.state.nextCursor ? `?next_cursor=${this.state.nextCursor}` : '');\n    const response = await fetch(url);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  componentDidMount() {\n    this.callPhotoGalleryAPI()\n      .then(res => {\n        const newState = {};\n        // set nextCursor to prep to load next photos\n        if (res['next_cursor']) {\n          newState.nextCursor = res['next_cursor'];\n        }\n        // show the photos\n        const photos = this.state.photos.slice();\n        const newPhotos = photos.concat(this.parseData(res['resources']));\n        newState.photos = newPhotos;\n        this.setState(newState);\n      })\n      .catch(err => console.log(err));\n  }\n\n  parseData(photos) {\n    return photos.map((element, index) => {\n      return {\n        src: element.url,\n        width: element.width,\n        height: element.height\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Photos\">\n        <Gallery photos={ this.state.photos } />\n      </div>\n    );\n  }\n}\n\nexport default Photos;","import React, { Component } from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport { Route, Switch } from \"react-router-dom\";\n\n// Components\nimport MainPage from './components/MainPage';\nimport AboutMe from './components/AboutMe';\nimport Experience from './components/Experience';\nimport Photos from './components/Photos';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <main className=\"App\">\n        <Menu className=\"App-menu\" borderless attached='top' fluid size='massive'>\n          <Menu.Item link href=\"/\" header className=\"App-menu-header\" position=\"left\">Mia Froehling Gallier</Menu.Item>\n          <Menu.Menu className=\"App-menu-items\">\n            <Menu.Item\n              name='about'\n              as='a'\n              link\n              href='/aboutme'\n              active={ activeItem === 'about' }\n              onClick={this.handleItemClick}\n            >\n              About\n            </Menu.Item>\n            <Menu.Item\n              name='experience'\n              as='a'\n              link\n              href='/experience'\n              active={ activeItem === 'experience' }\n              onClick={this.handleItemClick}\n            >\n              Experience\n            </Menu.Item>\n            <Menu.Item\n              name='photos'\n              as='a'\n              link\n              href='/photos'\n              active={ activeItem === 'photos' }\n              onClick={this.handleItemClick}\n            >\n              Photos\n            </Menu.Item>\n          </Menu.Menu>\n          <Menu.Menu className=\"App-social-buttons\" position=\"right\">\n            <Menu.Item as='a' href=\"https://www.linkedin.com/in/mia-froehling-gallier\" target=\"_blank\">\n              <Icon name='linkedin' />\n            </Menu.Item>\n            <Menu.Item as='a' href=\"https://www.facebook.com/Miafroehlinggallier\" target=\"_blank\">\n              <Icon name='facebook f' />\n            </Menu.Item>\n            <Menu.Item as='a' href=\"https://github.com/miafg\" target=\"_blank\">\n              <Icon name='github' />\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/aboutme\" component={AboutMe} />\n          <Route path=\"/experience\" component={Experience} />\n          <Route path=\"/photos\" component={Photos} />\n        </Switch>\n        <footer className=\"App-Footer\">\n          Created by Mia Froehling Gallier\n        </footer>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}